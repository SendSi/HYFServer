// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: bag.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace HYFServer {
  public static partial class BagService
  {
    static readonly string __ServiceName = "bag.BagService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::HYFServer.BagRequest> __Marshaller_bag_BagRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::HYFServer.BagRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::HYFServer.BagResponse> __Marshaller_bag_BagResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::HYFServer.BagResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::HYFServer.BagAllInfoRequest> __Marshaller_bag_BagAllInfoRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::HYFServer.BagAllInfoRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::HYFServer.BagAllInfoResponse> __Marshaller_bag_BagAllInfoResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::HYFServer.BagAllInfoResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::HYFServer.BagOneInfoRequest> __Marshaller_bag_BagOneInfoRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::HYFServer.BagOneInfoRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::HYFServer.BagOneInfoResponse> __Marshaller_bag_BagOneInfoResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::HYFServer.BagOneInfoResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::HYFServer.BagUsingItemRequest> __Marshaller_bag_BagUsingItemRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::HYFServer.BagUsingItemRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::HYFServer.BagUsingItemResponse> __Marshaller_bag_BagUsingItemResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::HYFServer.BagUsingItemResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::HYFServer.OpenBagRequest> __Marshaller_bag_OpenBagRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::HYFServer.OpenBagRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::HYFServer.OpenBagResponse> __Marshaller_bag_OpenBagResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::HYFServer.OpenBagResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::HYFServer.BagRequest, global::HYFServer.BagResponse> __Method_ListenBag = new grpc::Method<global::HYFServer.BagRequest, global::HYFServer.BagResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "ListenBag",
        __Marshaller_bag_BagRequest,
        __Marshaller_bag_BagResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::HYFServer.BagAllInfoRequest, global::HYFServer.BagAllInfoResponse> __Method_BagAllInfo = new grpc::Method<global::HYFServer.BagAllInfoRequest, global::HYFServer.BagAllInfoResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BagAllInfo",
        __Marshaller_bag_BagAllInfoRequest,
        __Marshaller_bag_BagAllInfoResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::HYFServer.BagOneInfoRequest, global::HYFServer.BagOneInfoResponse> __Method_BagOneInfo = new grpc::Method<global::HYFServer.BagOneInfoRequest, global::HYFServer.BagOneInfoResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BagOneInfo",
        __Marshaller_bag_BagOneInfoRequest,
        __Marshaller_bag_BagOneInfoResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::HYFServer.BagUsingItemRequest, global::HYFServer.BagUsingItemResponse> __Method_BagUsingItem = new grpc::Method<global::HYFServer.BagUsingItemRequest, global::HYFServer.BagUsingItemResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BagUsingItem",
        __Marshaller_bag_BagUsingItemRequest,
        __Marshaller_bag_BagUsingItemResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::HYFServer.OpenBagRequest, global::HYFServer.OpenBagResponse> __Method_OpenBag = new grpc::Method<global::HYFServer.OpenBagRequest, global::HYFServer.OpenBagResponse>(
        grpc::MethodType.DuplexStreaming,
        __ServiceName,
        "OpenBag",
        __Marshaller_bag_OpenBagRequest,
        __Marshaller_bag_OpenBagResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::HYFServer.BagReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of BagService</summary>
    [grpc::BindServiceMethod(typeof(BagService), "BindService")]
    public abstract partial class BagServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task ListenBag(global::HYFServer.BagRequest request, grpc::IServerStreamWriter<global::HYFServer.BagResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::HYFServer.BagAllInfoResponse> BagAllInfo(global::HYFServer.BagAllInfoRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::HYFServer.BagOneInfoResponse> BagOneInfo(global::HYFServer.BagOneInfoRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::HYFServer.BagUsingItemResponse> BagUsingItem(global::HYFServer.BagUsingItemRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task OpenBag(grpc::IAsyncStreamReader<global::HYFServer.OpenBagRequest> requestStream, grpc::IServerStreamWriter<global::HYFServer.OpenBagResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(BagServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ListenBag, serviceImpl.ListenBag)
          .AddMethod(__Method_BagAllInfo, serviceImpl.BagAllInfo)
          .AddMethod(__Method_BagOneInfo, serviceImpl.BagOneInfo)
          .AddMethod(__Method_BagUsingItem, serviceImpl.BagUsingItem)
          .AddMethod(__Method_OpenBag, serviceImpl.OpenBag).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, BagServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_ListenBag, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::HYFServer.BagRequest, global::HYFServer.BagResponse>(serviceImpl.ListenBag));
      serviceBinder.AddMethod(__Method_BagAllInfo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::HYFServer.BagAllInfoRequest, global::HYFServer.BagAllInfoResponse>(serviceImpl.BagAllInfo));
      serviceBinder.AddMethod(__Method_BagOneInfo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::HYFServer.BagOneInfoRequest, global::HYFServer.BagOneInfoResponse>(serviceImpl.BagOneInfo));
      serviceBinder.AddMethod(__Method_BagUsingItem, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::HYFServer.BagUsingItemRequest, global::HYFServer.BagUsingItemResponse>(serviceImpl.BagUsingItem));
      serviceBinder.AddMethod(__Method_OpenBag, serviceImpl == null ? null : new grpc::DuplexStreamingServerMethod<global::HYFServer.OpenBagRequest, global::HYFServer.OpenBagResponse>(serviceImpl.OpenBag));
    }

  }
}
#endregion
